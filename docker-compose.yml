# version: '3.8'

services:
  web:
    build:
      context: ./docker_app  # Point to the directory containing the Dockerfile
      dockerfile: Dockerfile  # Specify the Dockerfile name
    ports:
      - "5000:5000"  # Flask on port 5000
    environment:
      - FLASK_ENV=development
      - FLASK_RUN_HOST=0.0.0.0
      - ELASTICSEARCH_HOST=elasticsearch  # Host for Elasticsearch
    volumes:
      - .:/app
      - ./reports:/app/reports
    depends_on:
      - mongo
      - logstash  # Add logstash dependency
    networks:
      - app-network

  selenium:
    image: selenium/standalone-firefox:latest
    ports:
      - "4444:4444"
    environment:
      - SCREEN_WIDTH=1920
      - SCREEN_HEIGHT=1080
    networks:
      - app-network
    depends_on:
      - web


  mongo:
    image: mongo:7.0.1
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network  # Connect to the app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Set Java heap size
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - app-network  # Connect to the app-network
    

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network  # Connect to the app-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    ports:
      - "5001:5001"  # Logstash on port 5001
    volumes:
      - ./elkd/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # Map Logstash config
    depends_on:
      - elasticsearch
    networks:
      - app-network  # Connect to the app-network

volumes:
  mongo-data:
  es-data:

# Define the custom network for all services to use
networks:
  app-network:
    driver: bridge