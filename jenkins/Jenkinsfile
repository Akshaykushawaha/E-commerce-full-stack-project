pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/Akshaykushawaha/E-commerce-full-stack-project.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    try {
                        sh 'docker-compose build'
                    } catch (Exception e) {
                        error "Build failed: ${e.message}"  // Mark the build as failed with a message
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    try {
                        sh 'docker-compose run web pytest --junitxml=reports/results.xml tests/'
                    } catch (Exception e) {
                        error "Test execution failed: ${e.message}"  // Mark the build as failed with a message
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    try {
                        sh 'docker-compose up -d'
                    } catch (Exception e) {
                        error "Deployment failed: ${e.message}"  // Mark the build as failed with a message
                    }
                }
            }
        }
    }

    post {
        always {
            junit 'reports/results.xml'  // Assuming you're generating JUnit test reports
            cleanWs()                    // Clean workspace after the build
        }
    }
}
